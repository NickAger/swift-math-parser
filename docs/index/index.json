{
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Articles",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/mathparser\/customsymbols",
            "title" : "Custom Symbols",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/mathparser\/gettinstarted",
            "title" : "Overview",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/mathparser\/impliedmultiplication",
            "title" : "ImpliedMultiplication",
            "type" : "article"
          },
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/init(variables:variabledict:unaryfunctions:unaryfunctiondict:binaryfunctions:binaryfunctiondict:enableimpliedmultiplication:)",
                "title" : "init(variables: MathParser.VariableMap?, variableDict: MathParser.VariableDict?, unaryFunctions: MathParser.UnaryFunctionMap?, unaryFunctionDict: MathParser.UnaryFunctionDict?, binaryFunctions: MathParser.BinaryFunctionMap?, binaryFunctionDict: MathParser.BinaryFunctionDict?, enableImpliedMultiplication: Bool)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/binaryfunctions",
                "title" : "let binaryFunctions: MathParser.BinaryFunctionMap",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/unaryfunctions",
                "title" : "let unaryFunctions: MathParser.UnaryFunctionMap",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/variables",
                "title" : "let variables: MathParser.VariableMap",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/parse(_:)",
                "title" : "func parse(String) -> Evaluator?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/parseresult(_:)",
                "title" : "func parseResult(String) -> MathParser.Result",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/binaryfunction",
                "title" : "MathParser.BinaryFunction",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/binaryfunctiondict",
                "title" : "MathParser.BinaryFunctionDict",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/binaryfunctionmap",
                "title" : "MathParser.BinaryFunctionMap",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/result",
                "title" : "MathParser.Result",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/unaryfunction",
                "title" : "MathParser.UnaryFunction",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/unaryfunctiondict",
                "title" : "MathParser.UnaryFunctionDict",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/unaryfunctionmap",
                "title" : "MathParser.UnaryFunctionMap",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/variabledict",
                "title" : "MathParser.VariableDict",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/variablemap",
                "title" : "MathParser.VariableMap",
                "type" : "typealias"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/defaultbinaryfunctions",
                "title" : "static let defaultBinaryFunctions: MathParser.BinaryFunctionDict",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/defaultunaryfunctions",
                "title" : "static let defaultUnaryFunctions: MathParser.UnaryFunctionDict",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparser\/defaultvariables",
                "title" : "static let defaultVariables: [String : Double]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/mathparser\/mathparser",
            "title" : "MathParser",
            "type" : "class"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/mathparser\/evaluator\/unresolved",
                "title" : "var unresolved: Unresolved",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/mathparser\/evaluator\/value",
                "title" : "var value: Double",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/mathparser\/evaluator\/eval(_:value:)",
                "title" : "func eval(String, value: Double) -> Double",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/mathparser\/evaluator\/eval(variables:unaryfunctions:binaryfunctions:)",
                "title" : "func eval(variables: MathParser.VariableMap?, unaryFunctions: MathParser.UnaryFunctionMap?, binaryFunctions: MathParser.BinaryFunctionMap?) -> Double",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/mathparser\/evaluator\/evalresult(_:value:)",
                "title" : "func evalResult(String, value: Double) -> Evaluator.Result",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/mathparser\/evaluator\/evalresult(variables:unaryfunctions:binaryfunctions:)",
                "title" : "func evalResult(variables: MathParser.VariableMap?, unaryFunctions: MathParser.UnaryFunctionMap?, binaryFunctions: MathParser.BinaryFunctionMap?) -> Evaluator.Result",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/mathparser\/evaluator\/result",
                "title" : "Evaluator.Result",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/mathparser\/evaluator",
            "title" : "Evaluator",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/mathparser\/unresolved\/binaryfunctions",
                "title" : "let binaryFunctions: Set<Substring>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/mathparser\/unresolved\/count",
                "title" : "var count: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/mathparser\/unresolved\/isempty",
                "title" : "var isEmpty: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/mathparser\/unresolved\/unaryfunctions",
                "title" : "let unaryFunctions: Set<Substring>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/mathparser\/unresolved\/variables",
                "title" : "let variables: Set<Substring>",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/mathparser\/unresolved",
            "title" : "Unresolved",
            "type" : "struct"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparsererror\/binaryfunctionnotfound(name:)",
                "title" : "case binaryFunctionNotFound(name: Substring)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparsererror\/parsefailure(context:)",
                "title" : "case parseFailure(context: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparsererror\/unaryfunctionnotfound(name:)",
                "title" : "case unaryFunctionNotFound(name: Substring)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/mathparser\/mathparsererror\/variablenotfound(name:)",
                "title" : "case variableNotFound(name: Substring)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/mathparser\/mathparsererror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/mathparser\/mathparsererror\/customstringconvertible-implementations",
                "title" : "CustomStringConvertible Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/mathparser\/mathparsererror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/mathparser\/mathparsererror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/mathparser\/mathparsererror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/mathparser\/mathparsererror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/mathparser\/mathparsererror",
            "title" : "MathParserError",
            "type" : "enum"
          }
        ],
        "path" : "\/documentation\/mathparser",
        "title" : "MathParser",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 1
  }
}