{
  "abstract" : [
    {
      "text" : "Mapping of names to an optional transform function of 2 arguments",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/MathParser\/documentation\/MathParser",
        "doc:\/\/MathParser\/documentation\/MathParser\/MathParser"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/BinaryFunctionMap"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10MathParserAAC17BinaryFunctionMapa",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "BinaryFunctionMap"
      }
    ],
    "modules" : [
      {
        "name" : "MathParser"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "BinaryFunctionMap"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Type Alias",
    "symbolKind" : "typealias",
    "title" : "MathParser.BinaryFunctionMap"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "typealias"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "BinaryFunctionMap"
            },
            {
              "kind" : "text",
              "text" : " = ("
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10MathParserAAC",
              "text" : "MathParser"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/BinaryFunction",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10MathParserAAC14BinaryFunctiona",
              "text" : "BinaryFunction"
            },
            {
              "kind" : "text",
              "text" : "?"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mathparser\/mathparser\/binaryfunctionmap"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://MathParser/documentation/MathParser": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MathParser",
  "type" : "topic",
  "url" : "\/documentation\/mathparser"
},
"doc://MathParser/documentation/MathParser/MathParser": {
  "abstract" : [
    {
      "text" : "Basic math expression parser built with Point•Free’s swift-parsing package (v0.12.0).",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser",
  "kind" : "article",
  "role" : "article",
  "title" : "MathParser",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/mathparser"
},
"doc://MathParser/documentation/MathParser/MathParser/BinaryFunction": {
  "abstract" : [
    {
      "text" : "Type definition for a reduction of two ",
      "type" : "text"
    },
    {
      "code" : "Double",
      "type" : "codeVoice"
    },
    {
      "text" : " values to one such as by a 2-argument function.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BinaryFunction"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/BinaryFunction",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BinaryFunction"
    }
  ],
  "role" : "symbol",
  "title" : "MathParser.BinaryFunction",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/mathparser\/binaryfunction"
},
"doc://MathParser/documentation/MathParser/MathParser/BinaryFunctionMap": {
  "abstract" : [
    {
      "text" : "Mapping of names to an optional transform function of 2 arguments",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BinaryFunctionMap"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/BinaryFunctionMap",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BinaryFunctionMap"
    }
  ],
  "role" : "symbol",
  "title" : "MathParser.BinaryFunctionMap",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/mathparser\/binaryfunctionmap"
}
}
}