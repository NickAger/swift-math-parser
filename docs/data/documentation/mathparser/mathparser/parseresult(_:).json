{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parseResult"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator","preciseIdentifier":"s:10MathParser9EvaluatorV","text":"Evaluator"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParserError","preciseIdentifier":"s:10MathParser0aB5ErrorV","text":"MathParserError"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"text","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the expression to parse"}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"Result"},{"type":"text","text":" enum"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".success"},{"type":"text","text":" – holds an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator"},{"type":"text","text":" instance for evaluations of the parsed expression"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".failure"},{"type":"text","text":" – holds a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParserError"},{"type":"text","text":" instance that describes the parse failure"}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mathparser\/mathparser\/parseresult(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/parseResult(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Parse an expression into a token that can be evaluated at a later time. Returns a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" enum with two cases:"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parseResult"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Evaluator","preciseIdentifier":"s:10MathParser9EvaluatorV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MathParserError","preciseIdentifier":"s:10MathParser0aB5ErrorV"},{"kind":"text","text":">"}],"title":"parseResult(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:10MathParserAAC11parseResultys0D0OyAA9EvaluatorVAA0aB5ErrorVGSSF","modules":[{"name":"MathParser"}]},"hierarchy":{"paths":[["doc:\/\/MathParser\/documentation\/MathParser","doc:\/\/MathParser\/documentation\/MathParser\/MathParser"]]},"references":{"doc://MathParser/documentation/MathParser/Evaluator":{"role":"symbol","title":"Evaluator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Evaluator"}],"abstract":[{"type":"text","text":"Evaluator of parsed tokens."}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Evaluator"}],"url":"\/documentation\/mathparser\/evaluator"},"doc://MathParser/documentation/MathParser/MathParser/parseResult(_:)":{"role":"symbol","title":"parseResult(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parseResult"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Evaluator","preciseIdentifier":"s:10MathParser9EvaluatorV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MathParserError","preciseIdentifier":"s:10MathParser0aB5ErrorV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Parse an expression into a token that can be evaluated at a later time. Returns a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" enum with two cases:"}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/parseResult(_:)","kind":"symbol","type":"topic","url":"\/documentation\/mathparser\/mathparser\/parseresult(_:)"},"doc://MathParser/documentation/MathParser/MathParserError":{"role":"symbol","title":"MathParserError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MathParserError"}],"abstract":[{"type":"text","text":"Error type that describes a failure in either text parsing or token evaluation."}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParserError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MathParserError"}],"url":"\/documentation\/mathparser\/mathparsererror"},"doc://MathParser/documentation/MathParser/MathParser":{"role":"symbol","title":"MathParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MathParser"}],"abstract":[{"type":"text","text":"A parser for simple math expressions made up of five common operations addition, subtraction, multiplication,"},{"type":"text","text":" "},{"type":"text","text":"division, and exponentiation, as well as one- and two-argument functions like "},{"type":"codeVoice","code":"sqrt"},{"type":"text","text":" and "},{"type":"codeVoice","code":"sin"},{"type":"text","text":", and named"},{"type":"text","text":" "},{"type":"text","text":"variables \/ symbols."}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MathParser"}],"url":"\/documentation\/mathparser\/mathparser"},"doc://MathParser/documentation/MathParser":{"role":"collection","title":"MathParser","abstract":[],"identifier":"doc:\/\/MathParser\/documentation\/MathParser","kind":"symbol","type":"topic","url":"\/documentation\/mathparser"}}}