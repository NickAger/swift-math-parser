{
  "abstract" : [
    {
      "text" : "Default 2-argument functions to use for parsing and evaluation.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/MathParser\/documentation\/MathParser",
        "doc:\/\/MathParser\/documentation\/MathParser\/MathParser"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/defaultBinaryFunctions"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10MathParserAAC22defaultBinaryFunctionsSDySSS2d_SdtcGvpZ",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "defaultBinaryFunctions"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10MathParserAAC",
        "text" : "MathParser"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10MathParserAAC18BinaryFunctionDicta",
        "text" : "BinaryFunctionDict"
      }
    ],
    "modules" : [
      {
        "name" : "MathParser"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Type Property",
    "symbolKind" : "property",
    "title" : "defaultBinaryFunctions"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "static"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "let"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "defaultBinaryFunctions"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10MathParserAAC",
              "text" : "MathParser"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/BinaryFunctionDict",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10MathParserAAC18BinaryFunctionDicta",
              "text" : "BinaryFunctionDict"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "atan2",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " – calculate the angle measure in radians between the x-axis and a ray from the origin to a point (x, y).",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "Note that the argument order to ",
                      "type" : "text"
                    },
                    {
                      "code" : "atan2",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " is ",
                      "type" : "text"
                    },
                    {
                      "code" : "y",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " then ",
                      "type" : "text"
                    },
                    {
                      "code" : "x",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " by convention.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "hypot",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " – returns the length of a ray from the origin to a point (x, y).",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "Note that the argument order to ",
                      "type" : "text"
                    },
                    {
                      "code" : "hypot",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " is ",
                      "type" : "text"
                    },
                    {
                      "code" : "x",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " then ",
                      "type" : "text"
                    },
                    {
                      "code" : "y",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " unlike that of ",
                      "type" : "text"
                    },
                    {
                      "code" : "atan2",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "pow",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " – calculate the result of raising the first argument to the power of the second. Thus ",
                      "type" : "text"
                    },
                    {
                      "code" : "pow(x, y)",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " is the",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "same as writing ",
                      "type" : "text"
                    },
                    {
                      "code" : "x ^ y",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mathparser\/mathparser\/defaultbinaryfunctions"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://MathParser/documentation/MathParser": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MathParser",
  "type" : "topic",
  "url" : "\/documentation\/mathparser"
},
"doc://MathParser/documentation/MathParser/MathParser": {
  "abstract" : [
    {
      "text" : "Basic math expression parser built with Point•Free’s swift-parsing package (v0.12.0).",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser",
  "kind" : "article",
  "role" : "article",
  "title" : "MathParser",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/mathparser"
},
"doc://MathParser/documentation/MathParser/MathParser/BinaryFunctionDict": {
  "abstract" : [
    {
      "text" : "Dictionary of binary function names and their implementations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BinaryFunctionDict"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/BinaryFunctionDict",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BinaryFunctionDict"
    }
  ],
  "role" : "symbol",
  "title" : "MathParser.BinaryFunctionDict",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/mathparser\/binaryfunctiondict"
},
"doc://MathParser/documentation/MathParser/MathParser/defaultBinaryFunctions": {
  "abstract" : [
    {
      "text" : "Default 2-argument functions to use for parsing and evaluation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultBinaryFunctions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC",
      "text" : "MathParser"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC18BinaryFunctionDicta",
      "text" : "BinaryFunctionDict"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/defaultBinaryFunctions",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "defaultBinaryFunctions",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/mathparser\/defaultbinaryfunctions"
}
}
}