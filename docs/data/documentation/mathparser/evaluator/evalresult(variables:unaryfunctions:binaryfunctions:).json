{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"evalResult"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variables"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser","preciseIdentifier":"s:10MathParserAAC","text":"MathParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/VariableMap","preciseIdentifier":"s:10MathParserAAC11VariableMapa","text":"VariableMap"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"unaryFunctions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser","preciseIdentifier":"s:10MathParserAAC","text":"MathParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/UnaryFunctionMap","preciseIdentifier":"s:10MathParserAAC16UnaryFunctionMapa","text":"UnaryFunctionMap"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"binaryFunctions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser","preciseIdentifier":"s:10MathParserAAC","text":"MathParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/BinaryFunctionMap","preciseIdentifier":"s:10MathParserAAC17BinaryFunctionMapa","text":"BinaryFunctionMap"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"variables","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"optional mapping of names to constants to use during evaluation"}]}]},{"name":"unaryFunctions","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"optional mapping of names to 1 parameter functions to use during evaluation"}]}]},{"name":"binaryFunctions","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"optional mapping of names to 2 parameter functions to use during evaluation"}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"Result"},{"type":"text","text":" enum"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mathparser\/evaluator\/evalresult(variables:unaryfunctions:binaryfunctions:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/evalResult(variables:unaryFunctions:binaryFunctions:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Evaluate the token to obtain a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" value that indicates a success or failure. The "},{"type":"codeVoice","code":".success"},{"type":"text","text":" case holds a valid"},{"type":"text","text":" "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" value, while the "},{"type":"codeVoice","code":".failure"},{"type":"text","text":" case holds a string describing the failure."}],"kind":"symbol","metadata":{"role":"symbol","title":"evalResult(variables:unaryFunctions:binaryFunctions:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"evalResult"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variables"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"VariableMap","preciseIdentifier":"s:10MathParserAAC11VariableMapa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unaryFunctions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnaryFunctionMap","preciseIdentifier":"s:10MathParserAAC16UnaryFunctionMapa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"binaryFunctions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BinaryFunctionMap","preciseIdentifier":"s:10MathParserAAC17BinaryFunctionMapa"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:10MathParser9EvaluatorV10evalResult9variables14unaryFunctions06binaryH0s0E0OySds5Error_pGSdSgSScSg_S2dcSgSScSgS2d_SdtcSgSScSgtF","extendedModule":"MathParser","modules":[{"name":"MathParser"}]},"hierarchy":{"paths":[["doc:\/\/MathParser\/documentation\/MathParser","doc:\/\/MathParser\/documentation\/MathParser\/Evaluator"]]},"references":{"doc://MathParser/documentation/MathParser/MathParser/BinaryFunctionMap":{"role":"symbol","title":"MathParser.BinaryFunctionMap","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryFunctionMap"}],"abstract":[{"type":"text","text":"Mapping of names to an optional transform function of 2 arguments"}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/BinaryFunctionMap","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BinaryFunctionMap"}],"url":"\/documentation\/mathparser\/mathparser\/binaryfunctionmap"},"doc://MathParser/documentation/MathParser/MathParser":{"role":"symbol","title":"MathParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MathParser"}],"abstract":[{"type":"text","text":"A parser for simple math expressions made up of five common operations addition, subtraction, multiplication,"},{"type":"text","text":" "},{"type":"text","text":"division, and exponentiation, as well as one- and two-argument functions like "},{"type":"codeVoice","code":"sqrt"},{"type":"text","text":" and "},{"type":"codeVoice","code":"sin"},{"type":"text","text":", and named"},{"type":"text","text":" "},{"type":"text","text":"variables \/ symbols."}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MathParser"}],"url":"\/documentation\/mathparser\/mathparser"},"doc://MathParser/documentation/MathParser":{"role":"collection","title":"MathParser","abstract":[],"identifier":"doc:\/\/MathParser\/documentation\/MathParser","kind":"symbol","type":"topic","url":"\/documentation\/mathparser"},"doc://MathParser/documentation/MathParser/Evaluator":{"role":"symbol","title":"Evaluator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Evaluator"}],"abstract":[{"type":"text","text":"Evaluator of parsed tokens."}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Evaluator"}],"url":"\/documentation\/mathparser\/evaluator"},"doc://MathParser/documentation/MathParser/MathParser/UnaryFunctionMap":{"role":"symbol","title":"MathParser.UnaryFunctionMap","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnaryFunctionMap"}],"abstract":[{"type":"text","text":"Mapping of names to an optional transform function of 1 argument"}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/UnaryFunctionMap","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnaryFunctionMap"}],"url":"\/documentation\/mathparser\/mathparser\/unaryfunctionmap"},"doc://MathParser/documentation/MathParser/MathParser/VariableMap":{"role":"symbol","title":"MathParser.VariableMap","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariableMap"}],"abstract":[{"type":"text","text":"Mapping of variable names to an optional Double."}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/VariableMap","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariableMap"}],"url":"\/documentation\/mathparser\/mathparser\/variablemap"},"doc://MathParser/documentation/MathParser/Evaluator/evalResult(variables:unaryFunctions:binaryFunctions:)":{"role":"symbol","title":"evalResult(variables:unaryFunctions:binaryFunctions:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"evalResult"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variables"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"VariableMap","preciseIdentifier":"s:10MathParserAAC11VariableMapa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unaryFunctions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnaryFunctionMap","preciseIdentifier":"s:10MathParserAAC16UnaryFunctionMapa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"binaryFunctions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BinaryFunctionMap","preciseIdentifier":"s:10MathParserAAC17BinaryFunctionMapa"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Evaluate the token to obtain a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" value that indicates a success or failure. The "},{"type":"codeVoice","code":".success"},{"type":"text","text":" case holds a valid"},{"type":"text","text":" "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" value, while the "},{"type":"codeVoice","code":".failure"},{"type":"text","text":" case holds a string describing the failure."}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/evalResult(variables:unaryFunctions:binaryFunctions:)","kind":"symbol","type":"topic","url":"\/documentation\/mathparser\/evaluator\/evalresult(variables:unaryfunctions:binaryfunctions:)"}}}