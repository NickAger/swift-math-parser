{
  "abstract" : [
    {
      "text" : "Evaluate the token to obtain a ",
      "type" : "text"
    },
    {
      "code" : "Result",
      "type" : "codeVoice"
    },
    {
      "text" : " value that indicates a success or failure. The ",
      "type" : "text"
    },
    {
      "code" : ".success",
      "type" : "codeVoice"
    },
    {
      "text" : " case holds a valid",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "Double",
      "type" : "codeVoice"
    },
    {
      "text" : " value, while the ",
      "type" : "text"
    },
    {
      "code" : ".failure",
      "type" : "codeVoice"
    },
    {
      "text" : " case holds a string describing the failure.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/MathParser\/documentation\/MathParser",
        "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/evalResult(variables:unaryFunctions:binaryFunctions:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "MathParser",
    "externalID" : "s:10MathParser9EvaluatorV10evalResult9variables14unaryFunctions06binaryH0s0E0OySds5Error_pGSdSgSScSg_S2dcSgSScSgS2d_SdtcSgSScSgtF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "evalResult"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "variables"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10MathParserAAC",
        "text" : "MathParser"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10MathParserAAC11VariableMapa",
        "text" : "VariableMap"
      },
      {
        "kind" : "text",
        "text" : "?, "
      },
      {
        "kind" : "externalParam",
        "text" : "unaryFunctions"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10MathParserAAC",
        "text" : "MathParser"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10MathParserAAC16UnaryFunctionMapa",
        "text" : "UnaryFunctionMap"
      },
      {
        "kind" : "text",
        "text" : "?, "
      },
      {
        "kind" : "externalParam",
        "text" : "binaryFunctions"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10MathParserAAC",
        "text" : "MathParser"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10MathParserAAC17BinaryFunctionMapa",
        "text" : "BinaryFunctionMap"
      },
      {
        "kind" : "text",
        "text" : "?) -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s6ResultO",
        "text" : "Result"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s5ErrorP",
        "text" : "Error"
      },
      {
        "kind" : "text",
        "text" : ">"
      }
    ],
    "modules" : [
      {
        "name" : "MathParser"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "evalResult(variables:unaryFunctions:binaryFunctions:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "evalResult"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "variables"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10MathParserAAC",
              "text" : "MathParser"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/VariableMap",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10MathParserAAC11VariableMapa",
              "text" : "VariableMap"
            },
            {
              "kind" : "text",
              "text" : "? = nil, "
            },
            {
              "kind" : "externalParam",
              "text" : "unaryFunctions"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10MathParserAAC",
              "text" : "MathParser"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/UnaryFunctionMap",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10MathParserAAC16UnaryFunctionMapa",
              "text" : "UnaryFunctionMap"
            },
            {
              "kind" : "text",
              "text" : "? = nil, "
            },
            {
              "kind" : "externalParam",
              "text" : "binaryFunctions"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10MathParserAAC",
              "text" : "MathParser"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/BinaryFunctionMap",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10MathParserAAC17BinaryFunctionMapa",
              "text" : "BinaryFunctionMap"
            },
            {
              "kind" : "text",
              "text" : "? = nil) -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s6ResultO",
              "text" : "Result"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sd",
              "text" : "Double"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s5ErrorP",
              "text" : "Error"
            },
            {
              "kind" : "text",
              "text" : ">"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "optional mapping of names to constants to use during evaluation",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "variables"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "optional mapping of names to 1 parameter functions to use during evaluation",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "unaryFunctions"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "optional mapping of names to 2 parameter functions to use during evaluation",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "binaryFunctions"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "",
              "type" : "text"
            },
            {
              "code" : "Result",
              "type" : "codeVoice"
            },
            {
              "text" : " enum",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mathparser\/evaluator\/evalresult(variables:unaryfunctions:binaryfunctions:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://MathParser/documentation/MathParser": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MathParser",
  "type" : "topic",
  "url" : "\/documentation\/mathparser"
},
"doc://MathParser/documentation/MathParser/Evaluator": {
  "abstract" : [
    {
      "text" : "Evaluator of parsed tokens.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Evaluator"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Evaluator"
    }
  ],
  "role" : "symbol",
  "title" : "Evaluator",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/evaluator"
},
"doc://MathParser/documentation/MathParser/Evaluator/evalResult(variables:unaryFunctions:binaryFunctions:)": {
  "abstract" : [
    {
      "text" : "Evaluate the token to obtain a ",
      "type" : "text"
    },
    {
      "code" : "Result",
      "type" : "codeVoice"
    },
    {
      "text" : " value that indicates a success or failure. The ",
      "type" : "text"
    },
    {
      "code" : ".success",
      "type" : "codeVoice"
    },
    {
      "text" : " case holds a valid",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "Double",
      "type" : "codeVoice"
    },
    {
      "text" : " value, while the ",
      "type" : "text"
    },
    {
      "code" : ".failure",
      "type" : "codeVoice"
    },
    {
      "text" : " case holds a string describing the failure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "evalResult"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "variables"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC",
      "text" : "MathParser"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC11VariableMapa",
      "text" : "VariableMap"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "unaryFunctions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC",
      "text" : "MathParser"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC16UnaryFunctionMapa",
      "text" : "UnaryFunctionMap"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "binaryFunctions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC",
      "text" : "MathParser"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC17BinaryFunctionMapa",
      "text" : "BinaryFunctionMap"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6ResultO",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/evalResult(variables:unaryFunctions:binaryFunctions:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "evalResult(variables:unaryFunctions:binaryFunctions:)",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/evaluator\/evalresult(variables:unaryfunctions:binaryfunctions:)"
},
"doc://MathParser/documentation/MathParser/MathParser": {
  "abstract" : [
    {
      "text" : "A parser for simple math expressions made up of five common operations addition, subtraction, multiplication,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "division, and exponentiation, as well as one- and two-argument functions like ",
      "type" : "text"
    },
    {
      "code" : "sqrt",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "sin",
      "type" : "codeVoice"
    },
    {
      "text" : ", and named",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "variables \/ symbols.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MathParser"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MathParser"
    }
  ],
  "role" : "symbol",
  "title" : "MathParser",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/mathparser"
},
"doc://MathParser/documentation/MathParser/MathParser/BinaryFunctionMap": {
  "abstract" : [
    {
      "text" : "Mapping of names to an optional transform function of 2 arguments",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BinaryFunctionMap"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/BinaryFunctionMap",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BinaryFunctionMap"
    }
  ],
  "role" : "symbol",
  "title" : "MathParser.BinaryFunctionMap",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/mathparser\/binaryfunctionmap"
},
"doc://MathParser/documentation/MathParser/MathParser/UnaryFunctionMap": {
  "abstract" : [
    {
      "text" : "Mapping of names to an optional transform function of 1 argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnaryFunctionMap"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/UnaryFunctionMap",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnaryFunctionMap"
    }
  ],
  "role" : "symbol",
  "title" : "MathParser.UnaryFunctionMap",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/mathparser\/unaryfunctionmap"
},
"doc://MathParser/documentation/MathParser/MathParser/VariableMap": {
  "abstract" : [
    {
      "text" : "Mapping of variable names to an optional Double.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariableMap"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser\/VariableMap",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariableMap"
    }
  ],
  "role" : "symbol",
  "title" : "MathParser.VariableMap",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/mathparser\/variablemap"
}
}
}