{
  "abstract" : [
    {
      "text" : "Evaluator of parsed tokens.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/MathParser\/documentation\/MathParser"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10MathParser9EvaluatorV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Evaluator"
      }
    ],
    "modules" : [
      {
        "name" : "MathParser"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Evaluator"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "Evaluator"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Evaluator"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "An evaluator attempts to resolve any remaining symbols in order to return a value from a parsed expression.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/eval(variables:unaryFunctions:binaryFunctions:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/evalResult(_:value:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " methods accept additional definitions for variables and functions. If all are then",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "resolved, then the evaluator can return a specific value from the parsed expression.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/unresolved",
        "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/value"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/eval(_:value:)",
        "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/eval(variables:unaryFunctions:binaryFunctions:)",
        "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/evalResult(_:value:)",
        "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/evalResult(variables:unaryFunctions:binaryFunctions:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/Result"
      ],
      "title" : "Type Aliases"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mathparser\/evaluator"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://MathParser/documentation/MathParser": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MathParser",
  "type" : "topic",
  "url" : "\/documentation\/mathparser"
},
"doc://MathParser/documentation/MathParser/Evaluator": {
  "abstract" : [
    {
      "text" : "Evaluator of parsed tokens.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Evaluator"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Evaluator"
    }
  ],
  "role" : "symbol",
  "title" : "Evaluator",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/evaluator"
},
"doc://MathParser/documentation/MathParser/Evaluator/Result": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Result"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/Result",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Result"
    }
  ],
  "role" : "symbol",
  "title" : "Evaluator.Result",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/evaluator\/result"
},
"doc://MathParser/documentation/MathParser/Evaluator/eval(_:value:)": {
  "abstract" : [
    {
      "text" : "Convenience method to evaluate an expression with one unknown symbol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "eval"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/eval(_:value:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "eval(_:value:)",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/evaluator\/eval(_:value:)"
},
"doc://MathParser/documentation/MathParser/Evaluator/eval(variables:unaryFunctions:binaryFunctions:)": {
  "abstract" : [
    {
      "text" : "Evaluate the token to obtain a value. By default will use symbol map and function map given to ",
      "type" : "text"
    },
    {
      "code" : "init",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "eval"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "variables"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC",
      "text" : "MathParser"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC11VariableMapa",
      "text" : "VariableMap"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "unaryFunctions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC",
      "text" : "MathParser"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC16UnaryFunctionMapa",
      "text" : "UnaryFunctionMap"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "binaryFunctions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC",
      "text" : "MathParser"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC17BinaryFunctionMapa",
      "text" : "BinaryFunctionMap"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/eval(variables:unaryFunctions:binaryFunctions:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "eval(variables:unaryFunctions:binaryFunctions:)",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/evaluator\/eval(variables:unaryfunctions:binaryfunctions:)"
},
"doc://MathParser/documentation/MathParser/Evaluator/evalResult(_:value:)": {
  "abstract" : [
    {
      "text" : "Convenience method to evaluate an expression with one unknown symbol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "evalResult"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParser9EvaluatorV",
      "text" : "Evaluator"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParser9EvaluatorV6Resulta",
      "text" : "Result"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/evalResult(_:value:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "evalResult(_:value:)",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/evaluator\/evalresult(_:value:)"
},
"doc://MathParser/documentation/MathParser/Evaluator/evalResult(variables:unaryFunctions:binaryFunctions:)": {
  "abstract" : [
    {
      "text" : "Evaluate the token to obtain a ",
      "type" : "text"
    },
    {
      "code" : "Result",
      "type" : "codeVoice"
    },
    {
      "text" : " value that indicates a success or failure. The ",
      "type" : "text"
    },
    {
      "code" : ".success",
      "type" : "codeVoice"
    },
    {
      "text" : " case holds a valid",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "Double",
      "type" : "codeVoice"
    },
    {
      "text" : " value, while the ",
      "type" : "text"
    },
    {
      "code" : ".failure",
      "type" : "codeVoice"
    },
    {
      "text" : " case holds a string describing the failure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "evalResult"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "variables"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC",
      "text" : "MathParser"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC11VariableMapa",
      "text" : "VariableMap"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "unaryFunctions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC",
      "text" : "MathParser"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC16UnaryFunctionMapa",
      "text" : "UnaryFunctionMap"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "binaryFunctions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC",
      "text" : "MathParser"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParserAAC17BinaryFunctionMapa",
      "text" : "BinaryFunctionMap"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParser9EvaluatorV",
      "text" : "Evaluator"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParser9EvaluatorV6Resulta",
      "text" : "Result"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/evalResult(variables:unaryFunctions:binaryFunctions:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "evalResult(variables:unaryFunctions:binaryFunctions:)",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/evaluator\/evalresult(variables:unaryfunctions:binaryfunctions:)"
},
"doc://MathParser/documentation/MathParser/Evaluator/unresolved": {
  "abstract" : [
    {
      "text" : "Obtain unresolved names of symbols for variables and functions",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unresolved"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10MathParser10UnresolvedV",
      "text" : "Unresolved"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/unresolved",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unresolved",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/evaluator\/unresolved"
},
"doc://MathParser/documentation/MathParser/Evaluator/value": {
  "abstract" : [
    {
      "text" : "Resolve a parsed expression to a value. If the expression has unresolved symbols this will return NaN.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/value",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/evaluator\/value"
}
}
}