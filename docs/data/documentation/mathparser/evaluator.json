{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Evaluator"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mathparser\/evaluator"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Evaluator of parsed tokens."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Evaluator"}],"title":"Evaluator","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:10MathParser9EvaluatorV","modules":[{"name":"MathParser"}],"navigatorTitle":[{"kind":"identifier","text":"Evaluator"}]},"hierarchy":{"paths":[["doc:\/\/MathParser\/documentation\/MathParser"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/unresolved","doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/value"]},{"title":"Instance Methods","identifiers":["doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/eval(_:value:)","doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/eval(symbols:unaryFunctions:binaryFunctions:)","doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/eval(variables:unaryFunctions:binaryFunctions:)","doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/evalResult(variables:unaryFunctions:binaryFunctions:)"]}],"references":{"doc://MathParser/documentation/MathParser/Evaluator/value":{"role":"symbol","title":"value","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"abstract":[{"type":"text","text":"Resolve a parsed expression to a value. If the expression has unresolved symbols this will return NaN."}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/value","kind":"symbol","type":"topic","url":"\/documentation\/mathparser\/evaluator\/value"},"doc://MathParser/documentation/MathParser/Evaluator/eval(symbols:unaryFunctions:binaryFunctions:)":{"role":"symbol","title":"eval(symbols:unaryFunctions:binaryFunctions:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eval"},{"kind":"text","text":"("},{"kind":"externalParam","text":"symbols"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SymbolMap","preciseIdentifier":"s:10MathParserAAC9SymbolMapa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unaryFunctions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnaryFunctionMap","preciseIdentifier":"s:10MathParserAAC16UnaryFunctionMapa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"binaryFunctions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BinaryFunctionMap","preciseIdentifier":"s:10MathParserAAC17BinaryFunctionMapa"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"abstract":[],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/eval(symbols:unaryFunctions:binaryFunctions:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/mathparser\/evaluator\/eval(symbols:unaryfunctions:binaryfunctions:)"},"doc://MathParser/documentation/MathParser/Evaluator/evalResult(variables:unaryFunctions:binaryFunctions:)":{"role":"symbol","title":"evalResult(variables:unaryFunctions:binaryFunctions:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"evalResult"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variables"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"VariableMap","preciseIdentifier":"s:10MathParserAAC11VariableMapa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unaryFunctions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnaryFunctionMap","preciseIdentifier":"s:10MathParserAAC16UnaryFunctionMapa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"binaryFunctions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BinaryFunctionMap","preciseIdentifier":"s:10MathParserAAC17BinaryFunctionMapa"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Evaluate the token to obtain a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" value that indicates a success or failure. The "},{"type":"codeVoice","code":".success"},{"type":"text","text":" case holds a valid"},{"type":"text","text":" "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" value, while the "},{"type":"codeVoice","code":".failure"},{"type":"text","text":" case holds a string describing the failure."}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/evalResult(variables:unaryFunctions:binaryFunctions:)","kind":"symbol","type":"topic","url":"\/documentation\/mathparser\/evaluator\/evalresult(variables:unaryfunctions:binaryfunctions:)"},"doc://MathParser/documentation/MathParser/Evaluator/unresolved":{"role":"symbol","title":"unresolved","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unresolved"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Unresolved","preciseIdentifier":"s:10MathParser10UnresolvedV"}],"abstract":[{"type":"text","text":"Obtain unresolved names of symbols for variables and functions"}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/unresolved","kind":"symbol","type":"topic","url":"\/documentation\/mathparser\/evaluator\/unresolved"},"doc://MathParser/documentation/MathParser":{"role":"collection","title":"MathParser","abstract":[],"identifier":"doc:\/\/MathParser\/documentation\/MathParser","kind":"symbol","type":"topic","url":"\/documentation\/mathparser"},"doc://MathParser/documentation/MathParser/Evaluator/eval(_:value:)":{"role":"symbol","title":"eval(_:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eval"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"abstract":[{"type":"text","text":"Convenience method to evaluate an expression with one unknown symbol."}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/eval(_:value:)","kind":"symbol","type":"topic","url":"\/documentation\/mathparser\/evaluator\/eval(_:value:)"},"doc://MathParser/documentation/MathParser/Evaluator/eval(variables:unaryFunctions:binaryFunctions:)":{"role":"symbol","title":"eval(variables:unaryFunctions:binaryFunctions:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eval"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variables"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"VariableMap","preciseIdentifier":"s:10MathParserAAC11VariableMapa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unaryFunctions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnaryFunctionMap","preciseIdentifier":"s:10MathParserAAC16UnaryFunctionMapa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"binaryFunctions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MathParser","preciseIdentifier":"s:10MathParserAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BinaryFunctionMap","preciseIdentifier":"s:10MathParserAAC17BinaryFunctionMapa"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"abstract":[{"type":"text","text":"Evaluate the token to obtain a value. By default will use symbol map and function map given to "},{"type":"codeVoice","code":"init"},{"type":"text","text":"."}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator\/eval(variables:unaryFunctions:binaryFunctions:)","kind":"symbol","type":"topic","url":"\/documentation\/mathparser\/evaluator\/eval(variables:unaryfunctions:binaryfunctions:)"},"doc://MathParser/documentation/MathParser/Evaluator":{"role":"symbol","title":"Evaluator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Evaluator"}],"abstract":[{"type":"text","text":"Evaluator of parsed tokens."}],"identifier":"doc:\/\/MathParser\/documentation\/MathParser\/Evaluator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Evaluator"}],"url":"\/documentation\/mathparser\/evaluator"}}}