{
  "hierarchy" : {
    "paths" : [
      [

      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/MathParser\/documentation\/MathParser"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "MathParser",
    "modules" : [
      {
        "name" : "MathParser"
      }
    ],
    "role" : "collection",
    "roleHeading" : "Framework",
    "symbolKind" : "module",
    "title" : "MathParser"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/MathParser\/documentation\/MathParser\/CustomSymbols",
        "doc:\/\/MathParser\/documentation\/MathParser\/GettinStarted",
        "doc:\/\/MathParser\/documentation\/MathParser\/ImpliedMultiplication"
      ],
      "title" : "Articles"
    },
    {
      "identifiers" : [
        "doc:\/\/MathParser\/documentation\/MathParser\/MathParser"
      ],
      "title" : "Classes"
    },
    {
      "identifiers" : [
        "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator",
        "doc:\/\/MathParser\/documentation\/MathParser\/Unresolved"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/MathParser\/documentation\/MathParser\/MathParserError"
      ],
      "title" : "Enumerations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/mathparser"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://MathParser/documentation/MathParser": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "MathParser",
  "type" : "topic",
  "url" : "\/documentation\/mathparser"
},
"doc://MathParser/documentation/MathParser/CustomSymbols": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/MathParser\/documentation\/MathParser",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " package tries to offer a great out-of-the-box experience without any configuration. It also offers",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a way to integrate your own functionality by way of providing custom variables and functions which the parser and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "evaluator can then use to successfully resolve and evaluate your math expressions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/CustomSymbols",
  "kind" : "article",
  "role" : "article",
  "title" : "Custom Symbols",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/customsymbols"
},
"doc://MathParser/documentation/MathParser/Evaluator": {
  "abstract" : [
    {
      "text" : "Evaluator of parsed tokens.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Evaluator"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Evaluator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Evaluator"
    }
  ],
  "role" : "symbol",
  "title" : "Evaluator",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/evaluator"
},
"doc://MathParser/documentation/MathParser/GettinStarted": {
  "abstract" : [
    {
      "text" : "Basic math expression parser built with Point•Free’s swift-parsing package (v0.12.0).",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/GettinStarted",
  "kind" : "article",
  "role" : "article",
  "title" : "Overview",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/gettinstarted"
},
"doc://MathParser/documentation/MathParser/ImpliedMultiplication": {
  "abstract" : [
    {
      "text" : "Math expression are often written without explicitly indicating when multiplication takes place. Instead there is a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "convention that dictates where a multiplication takes place between two terms.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/ImpliedMultiplication",
  "kind" : "article",
  "role" : "article",
  "title" : "Implied Multiplication",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/impliedmultiplication"
},
"doc://MathParser/documentation/MathParser/MathParser": {
  "abstract" : [
    {
      "text" : "A parser for simple math expressions made up of five common operations addition, subtraction, multiplication,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "division, and exponentiation, as well as one- and two-argument functions like ",
      "type" : "text"
    },
    {
      "code" : "sqrt",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "sin",
      "type" : "codeVoice"
    },
    {
      "text" : ", and named",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "variables \/ symbols.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MathParser"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParser",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MathParser"
    }
  ],
  "role" : "symbol",
  "title" : "MathParser",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/mathparser"
},
"doc://MathParser/documentation/MathParser/MathParserError": {
  "abstract" : [
    {
      "text" : "Error type that describes a failure in either text parsing or token evaluation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MathParserError"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/MathParserError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MathParserError"
    }
  ],
  "role" : "symbol",
  "title" : "MathParserError",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/mathparsererror"
},
"doc://MathParser/documentation/MathParser/Unresolved": {
  "abstract" : [
    {
      "text" : "Collection of unresolved names from parse. Attempts to evaluate a token with unresolved names will result in a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "NaN.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Unresolved"
    }
  ],
  "identifier" : "doc:\/\/MathParser\/documentation\/MathParser\/Unresolved",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Unresolved"
    }
  ],
  "role" : "symbol",
  "title" : "Unresolved",
  "type" : "topic",
  "url" : "\/documentation\/mathparser\/unresolved"
}
}
}